---

- name: create HTTP vhost configurations
  template:
    src: "{{ item.value.template | default( 'vhosts/' ~ nginx_vhost_templates.http ) }}"
    dest: "/etc/nginx/sites-available/{{ item.value.filename | default( item.key ~ '.conf' ) }}"
    force: true
    owner: root
    group: root
    mode: 0644
  when:
    # - item # | create_vhost('http')
    - item.value.state | default('present') != 'absent'
  loop:
    "{{ nginx_http_vhosts | dict2items }}"
  loop_control:
    label: "{{ item.value.filename | default( item.key ~ '.conf') }}"

- name: create HTTPs vhost configurations
  template:
    src: "{{ item.value.template | default( 'vhosts/' ~ nginx_vhost_templates.https ) }}"
    dest: "/etc/nginx/sites-available/{{ item.value.filename | default( item.key ~ '.conf' ) }}"
    force: true
    owner: root
    group: root
    mode: 0644
  when:
    # - item | create_vhost('https')
    - item.value.state | default('present') != 'absent'
  loop:
    "{{ nginx_https_vhosts | dict2items }}"
  loop_control:
    label: "{{ item.value.filename | default( item.key ~ '.conf') }}"

# # ---------------------------------------------------------------------------------------
#
# - name: enable HTTP sites configs
#   file:
#     src: /etc/nginx/sites-available/{{ item.value.filename | default( item.key ~ '.conf') }}
#     dest: /etc/nginx/sites-enabled/{{ item.value.filename | default( item.key ~ '.conf') }}
#     state: link
#   loop:
#     "{{ nginx_http_vhosts | dict2items }}"
#   loop_control:
#     label: "{{ item.value.filename | default( item.key ~ '.conf') }}"
#   when:
#     - item | create_vhost('http')
#     - item.value.state | default('present') != 'absent'
#     - not ansible_check_mode
#   notify:
#     - validate config
#     - reload service
#
# # ---------------------------------------------------------------------------------------
#
# # - name: "DEBUG: enable site config without enabled letsencrypt certificate"
# #   debug:
# #     msg: "{{ item.key }}"
# #   when:
# #     - item.value.state | default('present') != 'absent'
# #     - item | create_vhost('https')
# #     - item | activate_vhost_by('https')
# #   loop:
# #     "{{ nginx_vhosts | dict2items }}"
# #   loop_control:
# #     label: "{{ item.value.filename | default( item.key ~ '.conf') }}"
#
# - name: enable site config without enabled letsencrypt certificate
#   file:
#     src: /etc/nginx/sites-available/{{ item.value.filename | default( item.key ~ '.conf') }}
#     dest: /etc/nginx/sites-enabled/{{ item.value.filename | default( item.key ~ '.conf') }}
#     state: link
#   loop:
#     "{{ nginx_vhosts | dict2items }}"
#   loop_control:
#     label: "{{ item.value.filename | default( item.key ~ '.conf') }}"
#   when:
#     - item.value.state | default('present') != 'absent'
#     - item | create_vhost('https')
#     - item | activate_vhost_by('https')
#     - not ansible_check_mode
#   notify:
#     - validate config
#     - reload service

...
