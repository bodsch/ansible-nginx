---

name: Build & Test

on:
  schedule:
    - cron: "0 4 * * 0"
  push:
    branches:
      - 'main'
      - 'feature/**'
      - 'fix/**'
      - '!doc/**'
    # paths:
    #   - 'filter_plugins/*.py'
    #   - '!.github/workflows/*.yml'
    #   - '!doc/**'
    #   - '.config/pycodestyle.cfg'
  pull_request:
    branches:
      - 'main'
      - 'feature/**'
      - 'fix/**'
      - '!doc/**'
    # paths:
    #   - 'filter_plugins/*.py'
    #   - '!.github/workflows/*.yml'
    #   - '!doc/**'
    #   - '.config/pycodestyle.cfg'
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to test'
        required: false
        default: 'main'

defaults:
  run:
    working-directory: 'ansible-nginx'

env:
  PY_COLORS: '1'
  ANSIBLE_FORCE_COLOR: '1'

jobs:
  arch:
    name: "${{ matrix.image }} / ansible: ${{ matrix.ansible-version }}, scenario: ${{ matrix.scenario }}"
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        image:
          - archlinux:latest
          - artixlinux:latest
        python_version:
          - "3.12"
        ansible-version:
          - '9.5'
        scenario:
          - default
    steps:
      - name: Show trigger context
        working-directory: .
        run: |
          echo "event: ${{ github.event_name }}"
          echo "ref (raw): ${{ github.ref }}"
          echo "ref_name: ${{ github.ref_name }}"
          echo "manual input: ${{ github.event.inputs.ref }}"
          echo "head_branch (for PR): ${{ github.head_ref }}"

      - name: Determine ref to checkout
        working-directory: .
        id: get-ref
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ] && [ -n "${{ github.event.inputs.ref }}" ]; then
            echo "ref=${{ github.event.inputs.ref }}" >> $GITHUB_OUTPUT
          elif [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "ref=${{ github.head_ref }}" >> $GITHUB_OUTPUT
          else
            echo "ref=${{ github.ref_name }}" >> $GITHUB_OUTPUT
          fi

      - name: check out the codebase.
        uses: actions/checkout@v4
        with:
          path: 'ansible-nginx'
          ref: ${{ github.event.workflow_run.head_branch }}

      - name: üêç set up python
        uses: actions/setup-python@v5
        with:
          python-version: "${{ matrix.python_version }}"

      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r test-requirements.txt

      - name: force reinstall of community.docker
        run: |
          mkdir -p /home/runner/.ansible/collections
          ansible-galaxy collection install community.docker --force

      - name: test with tox
        run: |
          make \
            test \
            -e TOX_SCENARIO="${{ matrix.scenario }}" \
            -e TOX_ANSIBLE="ansible_${{ matrix.ansible-version }}" \
            -e DISTRIBUTION="${{ matrix.image }}"
